openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/users/{userId}/chats/{contactId}:
    get:
      tags:
      - chat-controller
      operationId: getChatContactDetails
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
      - chat-controller
      operationId: updateChatContact
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatContact'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
      - chat-controller
      operationId: deleteChatContact
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/users/{userId}/chats/{contactId}/messages:
    get:
      tags:
      - chat-controller
      operationId: getMessageDetails
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
      - chat-controller
      operationId: updateMessage
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
      - chat-controller
      operationId: saveMessage
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
      - chat-controller
      operationId: deleteMessage
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/users/{uid}:
    get:
      tags:
      - user-controller
      operationId: getUser
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/statuss/{uid}:
    get:
      tags:
      - status-controller
      operationId: getStatus
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - status-controller
      operationId: updateStatus
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - status-controller
      operationId: deleteStatus
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/groups/{groupId}:
    get:
      tags:
      - group-controller
      operationId: getGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
      - group-controller
      operationId: updateGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
      - group-controller
      operationId: deleteGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/admins/{uid}:
    get:
      tags:
      - admin-controller
      operationId: getAdmin
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - admin-controller
      operationId: updateAdmin
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - admin-controller
      operationId: deleteAdmin
      parameters:
      - name: uid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - user-controller
      operationId: saveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/{userId}/chats:
    get:
      tags:
      - chat-controller
      operationId: getAllChatContacts
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
      - chat-controller
      operationId: saveChatContact
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatContact'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/statuss:
    get:
      tags:
      - status-controller
      operationId: getAllStatuss
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - status-controller
      operationId: saveStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/groups:
    get:
      tags:
      - group-controller
      operationId: getAllGroups
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
      - group-controller
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/groups/{groupId}/chats:
    post:
      tags:
      - group-controller
      operationId: saveMessage_1
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/admins:
    get:
      tags:
      - admin-controller
      operationId: getAllAdmins
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - admin-controller
      operationId: saveAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/{userId}/chats/messages:
    get:
      tags:
      - chat-controller
      operationId: getAllMessages
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
components:
  schemas:
    ChatContact:
      type: object
      properties:
        name:
          type: string
        profilePic:
          type: string
        contactId:
          type: string
        timeSent:
          type: string
          format: date-time
        lastMessage:
          type: string
        phoneNumber:
          type: string
    Message:
      type: object
      properties:
        senderId:
          type: string
        receiverId:
          type: string
        text:
          type: string
        type:
          type: string
        timeSent:
          type: string
          format: date-time
        messageId:
          type: string
        repliedMessage:
          type: string
        repliedTo:
          type: string
        repliedMessageType:
          type: string
        seen:
          type: boolean
    User:
      type: object
      properties:
        name:
          type: string
        uid:
          type: string
        profilePic:
          type: string
        phoneNumber:
          type: string
        groupId:
          type: array
          items:
            type: string
        online:
          type: boolean
    Status:
      type: object
      properties:
        uid:
          type: string
        username:
          type: string
        phoneNumber:
          type: string
        photoUrl:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        profilePic:
          type: string
        captions:
          type: array
          items:
            type: string
        statusId:
          type: string
        whoCanSee:
          type: array
          items:
            type: string
    Group:
      type: object
      properties:
        senderId:
          type: string
        name:
          type: string
        groupId:
          type: string
        lastMessage:
          type: string
        groupPic:
          type: string
        membersUid:
          type: array
          items:
            type: string
        timeSent:
          type: string
          format: date-time
    Admin:
      type: object
      properties:
        username:
          type: string
        uid:
          type: string
        profilePic:
          type: string
        email:
          type: string
